stages:
  - publish
  - deploy

build:
  image: docker:latest
  stage: publish
  services:
    - docker:dind
  before_script:
    - docker login registry.gitlab.com -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
  script:
    - cp UserManagement.Service/Templates/dockerfile/Dockerfile.solecode UserManagement.Service/Dockerfile
    - cp UserManagement.Service/Templates/gitmodules/.gitmodules.solecode .gitmodules
    - docker build --build-arg build_name=dev -f UserManagement.Service/Dockerfile -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest .
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
  after_script:
    - docker logout ${CI_REGISTRY}
  only:
    - development

deploy:
  image: alpine:latest
  stage: deploy
  script:
    - chmod og= $SSH_PRIVATE_KEY
    - apk update && apk add openssh-client
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no root@159.223.39.241 "docker login registry.gitlab.com -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no root@159.223.39.241 "docker container rm -f ens-user || true"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no root@159.223.39.241 "docker rmi ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no root@159.223.39.241 "docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no root@159.223.39.241 "docker run -d -p 5000:5000 -p 5001:5001 -e ASPNETCORE_HTTP_PORT=https://+:5001 -e ASPNETCORE_URLS=http://+:5000 -e ASPNETCORE_ENVIRONMENT=dev -v  /home/ens_documents:/app/Logs  --name ens-user ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest"
  only:
    - development
